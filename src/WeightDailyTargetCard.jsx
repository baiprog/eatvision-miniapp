import { useState } from "react";

export default function WeightDailyTargetCard({ data = [], currentWeight, startWeight, goalWeight }) {
  const [showAll, setShowAll] = useState(false);

  const getStatus = (expected, actual) => {
    if (!actual) return "neutral";
    const diff = actual - expected;
    if (Math.abs(diff) <= 0.2) return "good";        // –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã
    if (diff < -0.2) return "tooFast";               // —Ö—É–¥–µ–µ—Ç –±—ã—Å—Ç—Ä–µ–µ
    return "slow";                                   // –æ—Ç—Å—Ç–∞—ë—Ç
  };

  const statusColor = {
    good: "bg-green-50 border-green-300",
    slow: "bg-yellow-50 border-yellow-300",
    tooFast: "bg-red-50 border-red-300",
    neutral: "bg-gray-50 border-gray-200",
  };

  const progress = Math.max(
    0,
    Math.min(100, (((startWeight - currentWeight) / (startWeight - goalWeight)) * 100).toFixed(1))
  );

  return (
    <div className="bg-white rounded-2xl shadow p-4 mb-4">
      <div className="flex justify-between items-center mb-2">
        <div className="font-bold text-lg">üìä –ü—Ä–æ–≥—Ä–µ—Å—Å</div>
        <button
          onClick={() => setShowAll((p) => !p)}
          className="text-sm text-blue-500"
        >
          {showAll ? "–°–≤–µ—Ä–Ω—É—Ç—å" : "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—ë"}
        </button>
      </div>

      <div className="mb-4">
        <div className="text-sm mb-1">
          –°–±—Ä–æ—à–µ–Ω–æ: <b>{(startWeight - currentWeight).toFixed(1)} –∫–≥</b> –∏–∑ {startWeight - goalWeight} –∫–≥
        </div>
        <div className="w-full bg-gray-200 h-2 rounded-full">
          <div
            className="bg-green-500 h-2 rounded-full"
            style={{ width: `${progress}%` }}
          />
        </div>
        <div className="text-xs text-right mt-1 text-gray-500">{progress}%</div>
      </div>

      {(showAll ? data : data.slice(0, 1)).map((entry, i) => {
        const status = getStatus(entry.expected, entry.actual);
        return (
          <div
            key={i}
            className={`p-3 rounded-xl border ${statusColor[status]} mb-2`}
          >
            <div className="text-sm font-semibold mb-1">üóì {entry.date}</div>
            <div className="text-sm text-gray-700">
              üéØ –ü–ª–∞–Ω: <b>{entry.expected.toFixed(1)} –∫–≥</b>
              <br />
              ‚öñÔ∏è –§–∞–∫—Ç: <b>{entry.actual ? entry.actual.toFixed(1) + " –∫–≥" : "‚Äî"}</b>
              <br />
              üí° {status === "tooFast"
                ? "–°–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ, –¥–æ–±–∞–≤—å –ø–µ—Ä–µ–∫—É—Å –∏–ª–∏ —Å–Ω–∏–∑—å —Ç–µ–º–ø"
                : status === "slow"
                ? "–ò–¥—ë—Ç –æ—Ç—Å—Ç–∞–≤–∞–Ω–∏–µ –æ—Ç —Ü–µ–ª–∏, –ø—Ä–æ–≤–µ—Ä—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
                : status === "good"
                ? "–¢—ã –≤ –≥—Ä–∞—Ñ–∏–∫–µ! üëå"
                : "–û–∂–∏–¥–∞–µ—Ç—Å—è –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏–µ"}
            </div>
          </div>
        );
      })}
    </div>
  );
}